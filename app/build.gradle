/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.2/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    maven { url 'https://repo.gradle.org/gradle/libs-releases' }
    maven { url 'https://repo.gradle.org/gradle/libs-snapshots' }
}


dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'
    testImplementation 'org.assertj:assertj-core:3.21.0'
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'
//    implementation "org.gradle:gradle-tooling-api:8.1-rc-1"
    implementation files('/Users/donat/Development/git/gradle/gradle/subprojects/tooling-api/build/shaded-jar/gradle-tooling-api-shaded-8.2.jar')
    implementation project(":plugin")

}

application {
    // Define the main class for the application.
    mainClass = 'my.example.app.Gradle20898'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

tasks.named('run') {
  //  jvmArgs '-Dorg.gradle.debug=true'
    doFirst {
        println "JVM args of the Tooling API client's build': " + allJvmArgs
        jvmArgs.clear()
    }
}